name: Generate Test Cases

on:
  push:
    branches:
      - main  # Change this to your default branch if necessary

jobs:
  generate_test_cases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch full history to ensure all files are available

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get commit info and file contents
        id: get_commit_info
        run: |
          # Get the commit message
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          
          # Get changed files (use --name-only with HEAD~1 to compare against previous commit)
          CHANGED_FILES="$(git diff --name-only HEAD~1 HEAD)"
          
          # Debug: Output changed files
          echo "Changed Files: $CHANGED_FILES"

          # Initialize a variable to hold file contents
          FILE_CONTENTS=""

          # Read contents of each changed file
          for FILE in $CHANGED_FILES; do
            if [[ -f "$FILE" ]]; then
              FILE_CONTENTS+="\n\nFile: $FILE\n"
              FILE_CONTENTS+="$(cat "$FILE")"
            else
              echo "File not found or not a regular file: $FILE"
            fi
          done

          # Debug: Output file contents
          if [[ -z "$FILE_CONTENTS" ]]; then
            echo "No file contents were read."
          else
            echo "File Contents: $FILE_CONTENTS"
          fi

          # Output commit message and file contents for the next step
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "FILE_CONTENTS=$FILE_CONTENTS" >> $GITHUB_ENV

      - name: Generate test cases
        id: generate_test_cases
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Prepare the prompt for OpenAI
          PROMPT="Generate test cases based on the following commit message: '$COMMIT_MESSAGE' and the code changes:\n$FILE_CONTENTS"

          # Call the OpenAI API
          RESPONSE=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-3.5-turbo",
              "messages": [{"role": "user", "content": "'"${PROMPT}"'"}]
            }')

          # Extract generated test cases from the response
          TEST_CASES=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

          # Write the generated test cases to a file
          echo "Commit Message: $COMMIT_MESSAGE" > generated_test_cases.txt
          echo "Code Changes:" >> generated_test_cases.txt
          echo -e "$FILE_CONTENTS" >> generated_test_cases.txt
          echo "Generated Test Cases:" >> generated_test_cases.txt
          echo "$TEST_CASES" >> generated_test_cases.txt

      - name: Upload generated test cases
        uses: actions/upload-artifact@v3
        with:
          name: generated-test-cases
          path: generated_test_cases.txt
